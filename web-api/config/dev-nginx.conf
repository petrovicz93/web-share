user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;

    client_body_buffer_size 100K;
    client_header_buffer_size 10k;
    client_max_body_size 20m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout  65;
    send_timeout 10;

    # proxy_cache_path /tmp/cache keys_zone=mycache:10m inactive=60m;

    gzip  on;
    index index.html;

    ##########################################################################################
    # Upstreams
    ##########################################################################################

    upstream @amera-web-share {
        server amera-web-share:3000;
    }

    upstream @amera-web-main {
        server amera-web-main:5001;
    }

    upstream @amera-web-api {
        server amera-web-api:5000;
    }

    ##########################################################################################
    # Server conf
    ##########################################################################################

    server {
        listen       9000;
        listen  [::]:9000;
        server_name  localhost;

    #     return 301 https://$host$request_uri;
    # }

    # server {

    #     listen 443 ssl http2;
    #     server_name amera-web.dev;

    #     ssl_certificate /certs/ssl-certificates/dev.crt;
    #     ssl_certificate_key /certs/ssl-certificates/dev.key;

        ##########################################################################################
        # Variables
        ##########################################################################################

        set $root_web_main /app/main;
        set $root_web_share /app/share;

        root $root_web_main;

        ##########################################################################################
        # Error Pages
        ##########################################################################################

        error_page 404 /404;

        # error_page 500 504 /50x.html;

        # error_page 502 503 /under-maintenance;

        # Define the error page for 401 errors
        error_page 401 = @error401;

        # error_page 500 504 /50x.html;
        # location = /50x.html {
        #     alias $root_web_main/templates;
        # }

        # error_page 502 503 /under-maintenance;
        # location = /under-maintenance {
        #     rewrite /under-maintenance /maintenance.html break;
        #     alias $root_web_main/templates;
        # }


        ##########################################################################################
        # Authentication System
        ##########################################################################################
        # If the user is not logged in, redirect them to amera's login URL
        location @error401 {
            return 302 $scheme://$http_host/login?url=$scheme://$http_host$request_uri;
        }

        # API Endpoint to check whether or not the session is valid
        location = /valid-session {
            proxy_pass http://@amera-web-api/valid-session;
            # no need to send the POST body
            proxy_pass_request_body off;

            proxy_set_header Content-Length "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
        }

        ##########################################################################################
        # Amera Main Web UI
        ##########################################################################################

        # Proxy to the flask webserver that serves up the amera website
        # TODO: This needs to add caching for the static pages
        location / {
            auth_request /valid-session;
            auth_request_set $session_id $upstream_http_x_auth_session;
            proxy_set_header "X-Auth-Session" $session_id;
            proxy_pass_request_headers      on;
            proxy_pass http://@amera-web-main/;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy to the specific pages that do not require authentication
        location ~ ^/(login|member/invite/register.+) {

            proxy_pass http://@amera-web-main/$1;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Use the filesystem to serve up static assets without auth
        location /assets {
            root $root_web_main;
        }

        location /favicon.ico {
            root $root_web_main;
        }

        # Use the filesystem to serve up node_module static assets
        location /lib {
            rewrite /lib(.*) /$1 break;
            root $root_web_main/assets/node_modules;
        }

        ##########################################################################################
        # Amera Share Web UI
        ##########################################################################################

        # Proxy to the flask webserver that serves up the amera website
        # TODO: This needs to add caching for the static pages
        location /share {
            auth_request /valid-session;
            auth_request_set $session_id $upstream_http_x_auth_session;
            proxy_set_header "X-Auth-Session" $session_id;
            proxy_pass_request_headers      on;
            proxy_pass http://@amera-web-share/share;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Use the filesystem to serve up static assets without auth
        # location /static {
        #     root $root_web_main;
        # }

        # # Use the filesystem to serve up node_module static assets
        # location /lib {
        #     rewrite /lib(.*) /$1 break;
        #     root $root_web_main/assets/node_modules;
        # }

        ##########################################################################################
        # Amera Web API
        ##########################################################################################

        location ~ ^/api/(valid-session|session.*|languages|member/(?:login|logout|invite|register).*)$ {

            proxy_pass_request_headers      on;
            proxy_pass_request_body         on;
            client_max_body_size 1000000m;
            proxy_pass http://@amera-web-api/$1;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            rewrite /api/(.*) /$1 break;
            auth_request /valid-session;
            auth_request_set $session_id $upstream_http_x_auth_session;
            proxy_set_header "X-Auth-Session" $session_id;
            proxy_pass_request_headers      on;
            client_max_body_size 1000000m;
            proxy_pass http://@amera-web-api/;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

}

